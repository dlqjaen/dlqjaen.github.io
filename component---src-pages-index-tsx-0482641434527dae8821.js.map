{"version":3,"sources":["webpack:///./src/components/posting-list.tsx","webpack:///./src/components/tag-filter.tsx","webpack:///./src/pages/index.tsx"],"names":["PostLink","posting","postingList","map","index","className","key","node","frontmatter","title","to","path","tags","toLowerCase","date","description","tag","pageQuery","IndexPage","edges","data","allMarkdownRemark","location"],"mappings":"8OA2CeA,G,UA1BE,SAAC,GAAqD,IAC/DC,EAD+D,EAAnDC,YACUC,KAAI,SAACF,EAASG,GAAV,OAC9B,kBAAC,OAAD,CAAMC,UAAU,qBACdC,IAAQF,EAAL,IAAcH,EAAQM,KAAKC,YAAYC,MAC1CC,GAAKT,EAAQM,KAAKC,YAAYG,MAE9B,wBAAIN,UAAU,qBACZ,0BAAMA,UAAS,yBAA4BJ,EAAQM,KAAKC,YAAYI,KAAK,GAAGC,gBAC5E,0BAAMR,UAAU,uBAAwBJ,EAAQM,KAAKC,YAAYC,QAEnE,uBAAGJ,UAAU,sBAAuBJ,EAAQM,KAAKC,YAAYM,MAC7D,uBAAGT,UAAU,6BAA8BJ,EAAQM,KAAKC,YAAYO,aACpE,uBAAGV,UAAU,6BACTJ,EAAQM,KAAKC,YAAYI,KAAKT,KAAI,SAAAa,GAAG,OACrC,0BAAMV,IAASL,EAAQM,KAAKC,YAAYC,MAA/B,IAAwCO,EAAQX,UAAS,qBAAwBW,EAAIH,eAA9F,IAAsHG,WAK9H,OACE,6BAASX,UAAU,gBACfJ,KC1BOD,G,UARE,WAEf,OACE,6BAASK,UAAU,iBCqBVY,G,UAFEC,UAhBG,SAAC,GAAa,IACDC,EADC,EAAXC,KACXC,kBAAqBF,MAE7B,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQG,SAAS,KACf,kBAAC,IAAD,CAAKb,MAAM,YACX,6BAASJ,UAAU,QACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaH,YAAciB,QASV,e","file":"component---src-pages-index-tsx-0482641434527dae8821.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport \"../style/posting-list.less\"\n\ntype IPostingList = {\n  node: {\n    frontmatter: {\n      date: string\n      path: string\n      title: string\n      description: string | null;\n      tags: string[]\n    }\n  }\n}\n\nconst PostLink = ({ postingList }: { postingList: IPostingList[] }) => {\n  const posting = postingList.map((posting, index) => (\n    <Link className=\"posting-list__card\"\n      key={`${index}_${posting.node.frontmatter.title}`}\n      to={ posting.node.frontmatter.path }\n    >\n      <h4 className=\"posting-list__top\">\n        <span className={ `posting-list__marking ${posting.node.frontmatter.tags[0].toLowerCase()}` }></span>\n        <span className=\"posting-list__title\">{ posting.node.frontmatter.title }</span>\n      </h4>\n      <p className=\"posting-list__date\">{ posting.node.frontmatter.date }</p>\n      <p className=\"posting-list__description\">{ posting.node.frontmatter.description }</p>\n      <p className=\"posting-list__tag-wrapper\">\n        { posting.node.frontmatter.tags.map(tag => (\n          <span key={ `${posting.node.frontmatter.title}_${tag}` } className={ `posting-list__tag ${tag.toLowerCase()}` }>{ `#${tag}` }</span>\n        )) }\n      </p>\n    </Link>\n  ))\n  return (\n    <section className=\"posting-list\">\n      { posting }\n    </section>\n  )\n}\n\nexport default PostLink\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport \"../style/tag-filter.less\"\n\nconst PostLink = () => {\n\n  return (\n    <section className=\"tag-filter\">\n    </section>\n  )\n}\n\nexport default PostLink\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { RecoilRoot } from 'recoil'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostingList from \"../components/posting-list\"\nimport TagFilter from \"../components/tag-filter\"\nimport \"../style/home.less\"\n\nconst IndexPage = ({ data }) => {\n  const { allMarkdownRemark: { edges } } = data\n\n  return (\n    <RecoilRoot>\n    <Layout location=\"/\">\n      <SEO title=\"Posting\" />\n      <section className=\"home\">\n        <TagFilter />\n        <PostingList postingList={ edges } />\n      </section>\n    </Layout>\n    </RecoilRoot>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            date\n            path\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}