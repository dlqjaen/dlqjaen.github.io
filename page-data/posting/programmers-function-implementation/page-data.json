{"componentChunkName":"component---src-components-posting-tsx","path":"/posting/programmers-function-implementation","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42586\">링크</a></p>\n<pre><code class=\"language-javascript\">function solution(progresses, speeds) {\n    let deployDay = 0\n    let result = []\n\n    for (let i = 0, l = progresses.length; i &#x3C; l; i++) {\n        const day = Math.ceil((100 - progresses[i]) / speeds[i])\n        if (day > deployDay) {\n            result.push(1)\n            deployDay = day\n        } else {\n            result[result.length - 1] += 1\n        }\n    }\n\n    return result\n}\n</code></pre>\n<h3>문제풀이 생각</h3>\n<ol>\n<li>소수점 올림처리((100-진행도) / 하루당 진행률)를 해서 각 작업의 작업완료 날짜를 구한다.</li>\n<li>저장되어있는 배포날보다 현재 작업완료 날이 더 크다면 결과 배열에 카운트1짜리 값을 추가한다.</li>\n<li>저장되어있는 배포날보다 현재 작업완료 날이 더 작다면 결과 배열 마지막 값에 1을 추가한다.</li>\n<li>결과값을 반환한다.</li>\n</ol>\n<h3>다른 사람의 풀이 (<strong>iRequestUResponse , milliwonaire , 박하영</strong>)</h3>\n<pre><code class=\"language-javascript\">function solution(progresses, speeds) {\n    let answer = [0];\n    let days = progresses.map((progress, index) => Math.ceil((100 - progress) / speeds[index]));\n    let maxDay = days[0];\n\n    for(let i = 0, j = 0; i&#x3C; days.length; i++){\n        if(days[i] &#x3C;= maxDay) {\n            answer[j] += 1;\n        } else {\n            maxDay = days[i];\n            answer[++j] = 1;\n        }\n    }\n\n    return answer;\n}\n</code></pre>\n<h3>알게된 점</h3>\n<p>1.</p>","frontmatter":{"date":"2021-04-08","path":"/posting/programmers-function-implementation","title":"프로그래머스 - 기능개발","description":"먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.","tags":["JS","Algorithm"]}}},"pageContext":{"pagePath":"/posting/programmers-function-implementation"}},"staticQueryHashes":["3454785627","63159454","987710685"]}