{"componentChunkName":"component---src-components-posting-tsx","path":"/posting/threejs-journey-08-fullscreen-and-resizing","result":{"data":{"markdownRemark":{"html":"<h3>Introduce</h3>\n<ul>\n<li>사용 가능한 공간을 전체차지</li>\n<li>사용자가 크기 조정 제공</li>\n<li>사용자에게 전체화면 조정방법 제공</li>\n</ul>\n<h3>Viewport</h3>\n<pre><code class=\"language-javascript\">const sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight\n}\n</code></pre>\n<p>캔버스 대신 뷰포트를 맞게하려면 <code>windoow.innerWidth</code>와 <code>window.innerHeight</code>을 이용한다.</p>\n<p>브라우저 기본 스타일때문에 body에 패딩이 존재하고 그로인해 스크롤이 발생한다.</p>\n<p>CSS를 이용해서 꽉찬 화면을 만들어 준다.</p>\n<pre><code class=\"language-css\">html, body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; /* 스크롤생성 방지 */\n}\n.webgl {\n  position: fixed;\n  top: 0;\n  left: 0;\n  outline: none; /* 드래그 앤 드롭 아웃라인발생 방지 */\n}\n</code></pre>\n<h3>Resizng</h3>\n<pre><code class=\"language-javascript\">window.addEventListener('resize', () => {\n sizes.width = window.innerWidth\n sizes.height = window.innerHeight\n \n camera.aspect = sizes.width / sizes.height\n camera.updateProjectionMatrix()\n \n renderer.setSize(sizes.width, sizes.height)\n})\n</code></pre>\n<p><code>renderer.setSize(sizes.width, sizes.height)</code> 투영 행렬도를 업데이트 해줘야 한다는데 나중에 알려준다고 한다.</p>\n<h3>Handle Pixel Ratio</h3>\n<p>사용할 수 있는 화면 픽셀 비율을 구한다. <code>window.devicePixelRatio</code> </p>\n<p>랜더러의 픽셀 비율 업데이트 <code>renderer.setPixelRatio()</code></p>\n<p>픽셀비율이 높은 디바이스에서는 성능문제가 발생한다. 사람의 눈은 픽셀 비율 2와 3의 차이를 거의 느끼지 못하기 때문에 2로 최적화 해야한다.</p>\n<pre><code class=\"language-javascript\">window.addEventListener('resize', () => {\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio), 2)\n})\n</code></pre>\n<h3>Fullscreen</h3>\n<pre><code class=\"language-javascript\">windoow.addEventLisener('dbclick', () => {\n  if (!document.fullscreenElement) {\n    canvas.requestFullscreen()\n  } else {\n    document.exitFullscreen()\n  }\n})\n</code></pre>\n<p>Safari에서는 제대로 동작하지않기 때문에 Safari에서 제공하는 함수를 사용해야 한다.</p>\n<pre><code class=\"language-javascript\">windoow.addEventLisener('dblclick', () => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement\n  if (!fullscreenElement) {\n    if (canvas.requestFullscreen) {\n      canvas.requestFullscreen()\n    } else {\n      canvas.webkitRequestFullscreen()\n    }\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen()\n    } else {\n      document.webkitExitFullscreen()\n    }\n  }\n})\n</code></pre>","frontmatter":{"date":"2021-05-15","path":"/posting/threejs-journey-08-fullscreen-and-resizing","title":"threejs-journey 08-fullscreen and resizing","description":"three.js를 이용한 전체 화면 및 크기조정을 해보자","tags":["three.js"]}}},"pageContext":{"pagePath":"/posting/threejs-journey-08-fullscreen-and-resizing"}},"staticQueryHashes":["3454785627","63159454","987710685"]}