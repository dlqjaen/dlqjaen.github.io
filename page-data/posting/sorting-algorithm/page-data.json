{"componentChunkName":"component---src-components-posting-tsx","path":"/posting/sorting-algorithm","result":{"data":{"markdownRemark":{"html":"<h2>정렬 알고리즘</h2>\n<h3>선택 정렬</h3>\n<ol>\n<li>주어진 리스트에서 최소값을 찾는다.</li>\n<li>찾은 최소값을 리스트의 맨 앞 값과 교환한다.</li>\n<li>맨 앞 값을 제외한 나머지 값에서 다시 최소값을 찾는다.</li>\n<li>다시 찾은 최소값을 리스트의 두 번째값과 교환한다.</li>\n<li>1~4의 과정을 리스트의 마지막 값까지 반복한다.</li>\n</ol>\n<pre><code class=\"language-typescript\">selectSorting(arr: number[] = []) {\n  let temp: number[] = [...arr]\n\n  for (let i=0, l=arr.length; i&#x3C;l; i++) {\n    let minIndex = i\n    for (let j=i+1; j&#x3C;l; j++) {\n      if (temp[minIndex] &#x3C; temp[j]) { minIndex = j }\n      if (j === l-1) { temp[i] = arr[] }\n    }\n  }\n}\n</code></pre>\n<ul>\n<li>Worst Case: O(n^2) 정렬이 하나도 되어있지 않은 경우</li>\n<li>Best Case: O(n^2) 모두 정렬되어 있는 경우</li>\n</ul>\n<h4>장점</h4>\n<ul>\n<li>이해하기 쉽다</li>\n<li>구현하기 쉽다</li>\n<li>메모리 절약(in place 알고리즘)</li>\n</ul>\n<h4>단점</h4>\n<ul>\n<li>최선의 경우에서도 최악의 경우와 같은 시간이 걸리므로 속도가 느리다</li>\n</ul>\n<h3>삽입 정렬</h3>\n<h3>버블 정렬</h3>\n<h3>합병 정렬</h3>\n<h3>퀵 정렬</h3>","frontmatter":{"date":"2020-11-15","path":"/posting/sorting-algorithm","title":"정렬 알고리즘(선택)","description":"","tags":["Algorithm"]}}},"pageContext":{"pagePath":"/posting/sorting-algorithm"}},"staticQueryHashes":["3454785627","63159454","987710685"]}