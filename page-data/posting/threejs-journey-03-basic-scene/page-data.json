{"componentChunkName":"component---src-components-posting-tsx","path":"/posting/threejs-journey-03-basic-scene","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://threejs-journey.xyz/lessons/3\">Link</a></p>\n<ol>\n<li><code>three.js</code> 적용하려면 우선은 html에 <code>three.js</code> 라이브러리를 연결해 줘야한다.</li>\n<li><code>section</code> 다음에 스크립트를 로드하는 이유는 <a href=\"https://dlqjaen.github.io/posting/performance-improvement\">Web성능 최적화</a> 를 참고</li>\n</ol>\n<pre><code class=\"language-html\">&#x3C;!-- index.html -->\n&#x3C;body>\n    &#x3C;section id=\"webgl\">&#x3C;/section>  \n  &#x3C;script src=\"./three.min.js\">&#x3C;/script>\n  &#x3C;script src=\"./script.js\">&#x3C;/script>\n&#x3C;/body>\n</code></pre>\n<h3>공간생성</h3>\n<pre><code class=\"language-javascript\">// script.js\nconst scene = new THREE.Scene()\n</code></pre>\n<p><code>THREE</code> 객체를 이용해서 <code>scene</code> 을 생성한다. (공간)</p>\n<h3>오브젝트 생성</h3>\n<pre><code class=\"language-javascript\">const geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshBasicMaterial({ color: 0xff00000 })\nconst mesh = new THREE.Mesh(geometry, material)\nscene.add(mesh)\n</code></pre>\n<p><code>BoxGeometry</code>를 이용해서 네모상자 구조를 생성할 수 있다. 인자는 <code>(길이, 높이, 깊이)</code> 순서다.</p>\n<p><code>MeshBasicMaterial</code> 을 사용하면 단순한 음영으로 도형을 그릴 수 있다. 컬러는 <code>HEX, 색상이름, 16진수</code>으로도 지정가능</p>\n<p><code>Mesh</code> 를 이용하면 삼각형 폴리곤을 기반으로한 객체를 생성할 수 있는데 <code>geometry</code> 로 매체의 구조를 전달해주고 <code>material</code> 로 매체의 재질을 전달하면 오브젝트를 생성한다.</p>\n<p><code>scene.add(mesh)</code> 을 이용하면 앞서 생성한 공간에 방금만든 오브젝트를 추가할 수 있다.</p>\n<h3>카메라 생성</h3>\n<pre><code class=\"language-javascript\">const sizes = {\n  width: 800,\n  height: 600\n}\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height)\ncamera.position.z = 5\ncamera.position.x = 1\ncamera.position.y = 1\nscene.add(camera)\n</code></pre>\n<p><code>PerspectiveCamera</code> 를 이용하면 원근을 처리하는 카메라를 생성할 수 있다.</p>\n<p>첫 번째 매개변수로는 화각을 넘겨줄 수 있다. 화각이 좁을수록(작을수록) 물체가 확대된 것처럼 보이고 넓을수록(클수록) 화면의 왜곡이 심해진다.</p>\n<p>두 번째 매개변수는 가로세로의 비율을 넘겨준다.</p>\n<p>추가로 <code>position</code>으로 카메라의 위치를 조절할 수 있다. 최초 랜더링 시 카메라와 물체(mesh)가 같은 위치에 존재하기에 카메라를 z축으로 값을 주어 물체가 보이도록 한다.</p>\n<p><code>scene.add(camera)</code> 를 이용하면 공간에 카메라를 추가할 수 있다.</p>\n<h3>HTML에 랜더링</h3>\n<pre><code class=\"language-javascript\">const canvas = document.querySelector('canvas.webgl')\n\nconst renderer = new THREE.WebGLRenderer({ canvas })\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.render(scene, camera)\n</code></pre>\n<p><code>html</code>에 존재하는 엘리먼트를 지정하고 <code>new THREE.WebGLRenderer({ canvas })</code> 를 이용하여 Webgl을 객체를 생성한다.</p>\n<p><code>renderer.setSize(sizes.width, sizes.height)</code> 로 캔버스의 사이즈를 정해준다.</p>\n<p><code>renderer.render(scene, camera)</code> 을 이용해 앞서 생성했던 공간과 카메라를 캔버스에 랜더링한다.</p>\n<h3>전체 코드</h3>\n<pre><code class=\"language-javascript\">const scene = new THREE.Scene()\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshBasicMaterial({ color: 0xff00000 })\nconst mesh = new THREE.Mesh(geometry, material)\nscene.add(mesh)\n\nconst sizes = {\n  width: 800,\n  height: 600\n}\n\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height)\ncamera.position.z = 5\ncamera.position.x = 1\ncamera.position.y = 1\nscene.add(camera)\n\nconst canvas = document.querySelector('canvas.webgl')\nconst renderer = new THREE.WebGLRenderer({ canvas })\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.render(scene, camera)\n</code></pre>\n<h2>스터디 내용</h2>\n<ul>\n<li>전체적인 느낌은 3dmax의 UI화면을 상상하면서 접근하니 어렵게 다가오지 않았다.</li>\n<li>카메라, 화면, 물체의 개념을 잡고 코드를 작성해야 생각한 화면의 모습을 만들 수 있다.</li>\n<li><code>webgl</code>엘리먼트에는 하나의 <code>scene</code>만 들어가는 것인가?\n그런 것 같다. 대신 여러개의 <code>mesh</code>를 넣을 수 는 있는 것 같다.</li>\n<li>mesh에 색만 적용되어 있으니 형태를 인식하는게 껄끄럽다.</li>\n<li>소실점이 적용되어 있어서 카메라를 x, y, z축으로 이동 할 때마다 오브젝트에 원근법이 적용되어 보이는 것 같다.</li>\n<li>화면으 소실점을 표시해주는 UI가 있으면 좋을 것 같다.</li>\n</ul>","frontmatter":{"date":"2021-04-28","path":"/posting/threejs-journey-03-basic-scene","title":"threejs-journey 03-basic-scene","description":"three.js를 이용한 화면 기본셋팅","tags":["three.js"]}}},"pageContext":{"pagePath":"/posting/threejs-journey-03-basic-scene"}},"staticQueryHashes":["3454785627","63159454","987710685"]}